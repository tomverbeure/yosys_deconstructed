/* Generated by Yosys 0.8+576 (git sha1 b5f1bd0, gcc 5.4.0-6ubuntu1~16.04.11 -fPIC -Os) */

(* cells_not_processed =  1  *)
(* src = "test.v:26" *)
module test1(clk, reset_, we, waddr, wdata, re, raddr, rdata);
  (* src = "test.v:39" *)
  reg [7:0] _0_;
  (* src = "test.v:39" *)
  reg [7:0] _1_;
  (* src = "test.v:39" *)
  reg [7:0] _2_;
  (* src = "test.v:39" *)
  reg [7:0] _3_;
  (* src = "test.v:44" *)
  wire [7:0] _4_;
  (* src = "test.v:42" *)
  reg [7:0] _5_;
  (* src = "test.v:42" *)
  reg [7:0] _6_;
  (* src = "test.v:42" *)
  reg [7:0] _7_;
  (* src = "test.v:28" *)
  input clk;
  (* src = "test.v:32" *)
  input [7:0] raddr;
  (* src = "test.v:35" *)
  output [7:0] rdata;
  reg [7:0] rdata;
  (* src = "test.v:31" *)
  input re;
  (* src = "test.v:29" *)
  input reset_;
  (* src = "test.v:32" *)
  input [7:0] waddr;
  (* src = "test.v:33" *)
  input [7:0] wdata;
  (* src = "test.v:31" *)
  input we;
  (* src = "test.v:37" *)
  reg [7:0] mem [255:0];
  (* src = "test.v:44" *)
  \$memrd  #(
    .ABITS(32'd8),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\mem"),
    .TRANSPARENT(32'd0),
    .WIDTH(32'd8)
  ) _8_ (
    .ADDR(raddr),
    .CLK(1'hx),
    .DATA(_4_),
    .EN(1'hx)
  );
  (* src = "test.v:42" *)
  \$memwr  #(
    .ABITS(32'd8),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\mem"),
    .PRIORITY(32'd10),
    .WIDTH(32'd8)
  ) _9_ (
    .ADDR(_5_),
    .CLK(1'hx),
    .DATA(_6_),
    .EN(_7_)
  );
  always @* begin
    _0_ = 8'hxx;
    _1_ = 8'hxx;
    _2_ = 8'h00;
    _3_ = _4_;
    casez (we)
      1'h1:
        begin
          _0_ = waddr;
          _1_ = wdata;
          _2_ = 8'hff;
        end
      default:
          /* empty */;
    endcase
  end
  always @(posedge clk) begin
      rdata <= _3_;
      _5_ <= _0_;
      _6_ <= _1_;
      _7_ <= _2_;
  end
endmodule
